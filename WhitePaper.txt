git status
git config --global user.name "wawa"
git config --global user.email "wawulya@mail.ru"

> git remote add <alias> <remote repo>
git remote add project1 https://github.com/shashkovAA/learning.git

> git remote -v

project1 https://github.com/shashkovAA/learning.git (fetch)
project1 https://github.com/shashkovAA/learning.git (push)

> git push -u (ключ для запоминания что и куда при команде Push) <alias> <имя ветки>
git push -u  project1 master
Далее можно использовать просто : git push

>git add <имя файла> || .(все файлы) || <regex> - индексация файлов на изменения, которые будут подтверждены commit-ом

>git commit  -m "Meggase about changes!"

>git checkout -- <имя файла> -откатить изменения в файле

Пример начальной инициализации локального репозитория
при его создании на GitHub

$ echo "# Profit" >> README.md 	- создает Readme файл
git add README.md		- добавляет его в индекс
git commit -m "first commit"	- коммитит его
git remote add origin https://github.com/shashkovAA/Profit.git - добавляет привязку к удаленному репозиторию
git push -u origin master - проталкивает на удаленный репозиторий, то что было закоммитино.

>git log --pretty=format:<string>, где string может содержать например "%h - %an (%ar)  %s"
git log --pretty=format:"%h - %an (%ar)  %s"

>git checkout -b <name> - создание новой ветки и переход в нее
>git branch -v - просмотр веток
>git branch <name> - создание ветки
>git checkout <name> - переключение на ветку
>git branch -D <name> - удаление ветки

git branch -m old_branch new_branch         # Rename branch locally    
git push origin :old_branch                 # Delete the old branch    
git push --set-upstream origin new_branch   # Push the new branch, set local branch to track the new remote

$ git checkout master - перекллючение на ветку master
$ git merge hotfix - слияния dtnrb hotfix с Master


Игнорирование файлов/папок
1. Создать в корне файл .gitignore  и  вписать в него что не контролировать, например logs/
2. Если папка уже была в индексе, то 
#git rm -r -f --cached logs/

